{"version":3,"sources":["Cookie.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/Script/Game","sourcesContent":["import { CookieType, CookieTypeObject, CookieExtraType, CookieMax_X, CookieMax_Y } from \"../Data/ExtraCookieTypeManager\";\n\nconst {ccclass, property} = cc._decorator;\n\nexport enum CookieSwapDirection {\n    NONE,\n    LEFT,\n    UP,\n    RIGHT,\n    DOWN,\n}\n\nexport const CookieTile_Width: number = 96;\nexport const CookieTile_Height: number = 108;\n\ntype CookieMovingSwapDelegate = (cookieNode: cc.Node, direction: CookieSwapDirection) => void;\n\n@ccclass\nexport default class Cookie extends cc.Component {\n\n    @property(cc.Button)\n    m_button: cc.Button = null;\n\n    private cookieTypeObject: CookieTypeObject = {\n        normalType: CookieType.Sprite_0,\n        extraType: CookieExtraType.Extra_Normal,\n        pos_X: CookieMax_X,\n        pos_Y: CookieMax_Y,\n        isOpetation: false,\n        isExtraTriger: false\n    }\n\n    // private sprite: cc.Sprite = null;\n\n    private cookieNormalSpriteArray: Array<cc.SpriteFrame> = [];\n    private cookieHighlightedSpriteArray: Array<cc.SpriteFrame> = [];\n    private cookieExtraLineHorizontalSprite: cc.SpriteFrame = null;\n    private cookieExtraLineVerticalSprite: cc.SpriteFrame = null;\n    private cookieExtraBombSprite: cc.SpriteFrame = null;\n    private cookieExtraAllSprite: cc.SpriteFrame = null;\n    private cookieExtraLineHorizontalNormalArray: Array<cc.SpriteFrame> = [];\n    private cookieExtraLineHorizontalHighlightedArray: Array<cc.SpriteFrame> = [];\n    private cookieExtraLineVerticalNormalArray: Array<cc.SpriteFrame> = [];\n    private cookieExtraLineVerticalHighlightedArray: Array<cc.SpriteFrame> = [];\n    private cookieExtraBombNormalArray: Array<cc.SpriteFrame> = [];\n    private cookieExtraBombHighlightedArray: Array<cc.SpriteFrame> = [];\n    private cookieExtraAllNormal: cc.SpriteFrame = null;\n    private cookieExtraAllHighlighted: cc.SpriteFrame = null;\n\n    private m_canInitUI: boolean = false;\n    private m_cookieMovingSwapDel: CookieMovingSwapDelegate = null;\n    private m_ptDragStart: cc.Vec2;\n\n    private m_hasSwapedCookie: boolean = false;\n    private m_cookieTouchable: boolean = true;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.onLoadCookieTexture();\n    }\n\n    private onLoadCookieTexture() {\n        cc.loader.loadResDir(\"texture/Sprites/\", cc.SpriteFrame, function(err, prefab) {\n            this.m_canInitUI = true;\n            for (let index = 0; index < CookieType.CookieTypeCount; index++) {\n                let res: string = \"texture/Sprites/Sprite_\" + index;\n                this.cookieNormalSpriteArray.push(new cc.SpriteFrame(res));\n                res += \"_Highlighted\";\n                this.cookieHighlightedSpriteArray.push(new cc.SpriteFrame(res));\n                res = \"texture/Sprites/extra/Sprite_\" + index + \"_LH\";\n                this.cookieExtraLineHorizontalNormalArray.push(new cc.SpriteFrame(res));\n                res += \"_Highlighted\";\n                this.cookieExtraLineHorizontalHighlightedArray.push(new cc.SpriteFrame(res));\n                res = \"texture/Sprites/extra/Sprite_\" + index + \"_LV\";\n                this.cookieExtraLineVerticalNormalArray.push(new cc.SpriteFrame(res));\n                res += \"_Highlighted\";\n                this.cookieExtraLineVerticalHighlightedArray.push(new cc.SpriteFrame(res));\n                res = \"texture/Sprites/extra/Sprite_\" + index + \"_Bomb\";\n                this.cookieExtraBombNormalArray.push(new cc.SpriteFrame(res));\n                res += \"_Highlighted\";\n                this.cookieExtraBombHighlightedArray.push(new cc.SpriteFrame(res));\n                this.cookieExtraAllNormal = new cc.SpriteFrame(\"texture/Sprites/extra/All\");\n                this.cookieExtraAllHighlighted = new cc.SpriteFrame(\"texture/Sprites/extra/All_Highlighted\");\n            }\n\n            this.updateButtonFrame();\n        }.bind(this));\n\n    }\n\n    start () {\n\n    }\n\n    // update (dt) {}\n\n    // static isEqual(lhs: Cookie, rhs: Cookie): boolean {\n    //     return lhs.idx_X == rhs.idx_X && lhs.idx_Y == rhs.idx_Y;\n    // }\n    static randomSprite(): CookieType {\n        return Math.floor(Math.random() * CookieType.CookieTypeCount + 1);\n    }\n\n    // public isChecked(): boolean {\n    //     return false;\n    // }\n    // public unCheckedCookie() {\n        // this.m_toggle.isChecked = false;\n    // }\n\n    // public setCookieCheckedDelegate(delegate: CookieCheckedDelegate) {\n    //     this.m_cookieCheckedDel = delegate;\n    // }\n    public setCookieTouchable(touchable: boolean)\n    {\n        this.m_button.interactable = touchable;\n        this.m_cookieTouchable = touchable;\n    }\n    public setCookieMovingSwapDelegate(delegate: CookieMovingSwapDelegate) {\n        this.m_cookieMovingSwapDel = delegate;\n    }\n\n    public setCookieType(cookieType: CookieType) {\n        this.cookieTypeObject.normalType = cookieType;\n        if (!this.m_canInitUI) {\n            this.onLoadCookieTexture();\n        }\n        else {\n            this.updateButtonFrame();\n        }\n    }\n    public getCookieType(): CookieType {\n        return this.cookieTypeObject.normalType;\n    }\n    public setExtraType(extraType: CookieExtraType)\n    {\n        this.cookieTypeObject.extraType = extraType;\n        if (!this.m_canInitUI) {\n            this.onLoadCookieTexture();\n        }\n        else {\n            this.updateButtonFrame();\n        }\n    }\n    public getExtraType(): CookieExtraType\n    {\n        return this.cookieTypeObject.extraType;\n    }\n    public setExtraTrigerState(isTriger: boolean)\n    {\n        this.cookieTypeObject.isExtraTriger = isTriger;\n    }\n    public getExtraTrigerState(): boolean\n    {\n        return this.cookieTypeObject.isExtraTriger;\n    }\n    public getCookieObject(): CookieTypeObject\n    {\n        return this.cookieTypeObject;\n    }\n    private updateButtonFrame() {\n        let cookieNormalType = this.cookieTypeObject.normalType;\n        let normalSprite: cc.SpriteFrame = this.cookieNormalSpriteArray[cookieNormalType];\n        let hoverSprite: cc.SpriteFrame = this.cookieNormalSpriteArray[cookieNormalType];\n        let disabledSprite: cc.SpriteFrame = this.cookieNormalSpriteArray[cookieNormalType];\n        let pressedSprite: cc.SpriteFrame = this.cookieHighlightedSpriteArray[cookieNormalType];\n \n        \n        if (this.cookieTypeObject.extraType == CookieExtraType.Extra_Line_Horizontal)\n        {\n            normalSprite = this.cookieExtraLineHorizontalNormalArray[cookieNormalType];\n            hoverSprite = this.cookieExtraLineHorizontalNormalArray[cookieNormalType];\n            disabledSprite = this.cookieExtraLineHorizontalNormalArray[cookieNormalType];\n            pressedSprite = this.cookieExtraLineHorizontalHighlightedArray[cookieNormalType];\n        }\n        else if (this.cookieTypeObject.extraType == CookieExtraType.Extra_Line_Vertical)\n        {\n            normalSprite = this.cookieExtraLineVerticalNormalArray[cookieNormalType];\n            hoverSprite = this.cookieExtraLineVerticalNormalArray[cookieNormalType];\n            disabledSprite = this.cookieExtraLineVerticalNormalArray[cookieNormalType];\n            pressedSprite = this.cookieExtraLineVerticalHighlightedArray[cookieNormalType];\n        }\n        else if (this.cookieTypeObject.extraType == CookieExtraType.Extra_Bomb)\n        {\n            normalSprite = this.cookieExtraBombNormalArray[cookieNormalType];\n            hoverSprite = this.cookieExtraBombNormalArray[cookieNormalType];\n            disabledSprite = this.cookieExtraBombNormalArray[cookieNormalType];\n            pressedSprite = this.cookieExtraBombHighlightedArray[cookieNormalType];\n        }\n        else if (this.cookieTypeObject.extraType == CookieExtraType.Extra_All)\n        {\n            normalSprite = this.cookieExtraAllNormal;\n            hoverSprite = this.cookieExtraAllNormal;\n            disabledSprite = this.cookieExtraAllNormal;\n            pressedSprite = this.cookieExtraAllHighlighted;\n        }\n        this.m_button.normalSprite = normalSprite;\n        this.m_button.hoverSprite = hoverSprite;\n        this.m_button.disabledSprite = disabledSprite;\n        this.m_button.pressedSprite = pressedSprite;\n        this.m_button.node.active = true;\n    }\n\n    public init(idx_X: number, idx_Y: number, cookieType: CookieType, extraType: CookieExtraType) {\n        this.cookieTypeObject.pos_X = idx_X;\n        this.cookieTypeObject.pos_Y = idx_Y\n        this.setCookieType(cookieType);\n        this.setExtraType(extraType);\n        //\n        this.bindHandler();\n    }\n    public setCookie_X_Y(idx_X: number, idx_Y: number) {\n        this.cookieTypeObject.pos_X = idx_X;\n        this.cookieTypeObject.pos_Y = idx_Y\n    }\n    public getCookie_X_Y(): cc.Vec2 {\n        return new cc.Vec2(this.cookieTypeObject.pos_X, this.cookieTypeObject.pos_Y);\n    }\n    public setOperationState(isOperation: boolean)\n    {\n        this.cookieTypeObject.isOpetation = isOperation;\n    }\n    public getOperationState(): boolean\n    {\n        return this.cookieTypeObject.isOpetation;\n    }\n    public hasValue(): number {\n        return this.cookieTypeObject.pos_X * 10 + this.cookieTypeObject.pos_Y\n    }\n    public description(): string {\n        return \"type:\\(\" + this.cookieTypeObject.normalType + \") square:(\\(\" + this.cookieTypeObject.pos_X + \"),\\(\" + this.cookieTypeObject.pos_Y + \"))\";\n    }\n\n    private bindHandler() {\n        // let handler = new cc.Component.EventHandler();\n        // handler.target = this.node;\n        // handler.component = \"Cookie\"\n        // handler.handler = \"cookieCallback\";\n        // handler.customEventData = \"\";\n        // this.m_button.clickEvents.push(handler);\n\n        this.m_button.node.on(cc.Node.EventType.TOUCH_START, this.cookieTouchStartCallback, this);\n        this.m_button.node.on(cc.Node.EventType.TOUCH_MOVE, this.cookieTouchMoveCallback, this);\n        this.m_button.node.on(cc.Node.EventType.TOUCH_END, this.cookieTouchEndedCancelCallback, this);\n        this.m_button.node.on(cc.Node.EventType.TOUCH_CANCEL, this.cookieTouchEndedCancelCallback, this);\n\n    }\n\n    // private cookieCallback(event, customEventData) {\n    //     cc.log(this.description());\n    //     if (this.m_cookieCheckedDel) {\n    //         this.m_cookieCheckedDel();\n    //     }\n    // }\n    private cookieTouchStartCallback(event, customEventData) {\n        if (!this.m_cookieTouchable) return;\n        cc.log(this.description());\n        this.m_hasSwapedCookie = false;\n        this.m_ptDragStart = this.node.convertToNodeSpaceAR(event.touch.getLocation());\n    }\n    private cookieTouchMoveCallback(event, customEventData) {\n        if (!this.m_cookieTouchable) return;\n        let m_ptDrag = this.node.convertToNodeSpaceAR(event.touch.getLocation());\n        this.checkCurrentTouchPosition(m_ptDrag);\n    }\n    private cookieTouchEndedCancelCallback(event, customEventData) {\n        if (!this.m_cookieTouchable) return;\n        let m_ptDrag = this.node.convertToNodeSpaceAR(event.touch.getLocation());\n        this.checkCurrentTouchPosition(m_ptDrag);\n    }\n    private checkCurrentTouchPosition(m_ptDrag: cc.Vec2) {\n        let offset_X = m_ptDrag.x - this.m_ptDragStart.x;\n        let offset_Y = m_ptDrag.y - this.m_ptDragStart.y;\n        let offset_X_ABS = Math.abs(offset_X);\n        let offset_Y_ABS = Math.abs(offset_Y);\n        let swapDirection: CookieSwapDirection = CookieSwapDirection.NONE;\n        if (offset_X_ABS < this.node.width / 2 && offset_Y_ABS > this.node.height / 2) {\n            swapDirection = offset_Y > 0 ? CookieSwapDirection.UP : CookieSwapDirection.DOWN;\n        }\n        else if (offset_Y_ABS < this.node.height / 2 && offset_X_ABS > this.node.width / 2) {\n            swapDirection = offset_X > 0 ? CookieSwapDirection.RIGHT : CookieSwapDirection.LEFT;\n        }\n        if (swapDirection > CookieSwapDirection.NONE && !this.m_hasSwapedCookie) {\n            this.m_hasSwapedCookie = true;\n            this.setOperationState(true);\n            if (this.m_cookieMovingSwapDel) {\n                this.m_cookieMovingSwapDel(this.node, swapDirection);\n            }\n        }\n    }\n\n}\n"]}